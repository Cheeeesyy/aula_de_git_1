.botao {
    background-color: blueviolet;
    color: white;
    width: max-content;
    padding: 8px 16px;
    border-radius: 4px;
    cursor: pointer;

                /* Propriedade - Time - Tipo de animação - Delay */
    /* transition: background-color 2.5s cubic-bezier(0, 1, 1, 0) 0.5s;

    transition-property: background-color;
    transition-duration: 2.5s;
    transition-timing-function: linear;
    transition-delay: 2.5s; */
}

.botao:hover {
    /* background-color: brown;
    padding: 16px 32px;
    box-shadow: 4px 4px 16px #ccc; */
    animation: rotacao 2s;
}


.transforma {
    width: 150px;
    height: 200px;
    background-color: yellow;
    transition-duration: 1.5s;
    text-align: right;
}

.transforma:hover {
    animation: rotacao 3s;
    /* background-color: brown;
    transform: rotate(360deg);
    transition-timing-function: ease-in-out; */
    /* transform: scale(2, 1); */
    /* transform: skew(30deg, 0); */
    
}

@keyframes rotacao {
    0%, 100% {
        transform: rotate(0deg);
    }

    50% {
        background-color: red;
        transform: rotate(360deg);
        width: 400px;
    }
}



/* 
    max-content = Ocupa o máximo do conteudo (naquele caso, o tamnho do texto)

    transition = tempo de transição feita para animar elementos
    quando colocado dois valores de tempo um do lado do outro, o primeiro digito é o tempo da animação o segundo digito é sobre o tempo antes da animação começar (Delay)
    cubic-bezier = tempo da animação (colocado dentro do transition) https://cubic-bezier.com/#.17,.67,.83,.67

    transform = transforma um objeto em outras formas 
    (No caso do rotate, usar deg = degres ou graus em pt)
    (No caso de usar scale() o primeiro valor é o eixo X e o segundo é o eixo Y)
    (No caso de usar skew() o primeiro valor é o eixo X e o segundo é o eixo Y, recebendo valores em deg)
    




*/