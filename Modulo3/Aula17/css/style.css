body {
    height: 100vh;
    margin: 0;
}

.back {
    background-color: aquamarine;
    width: 50%;
    height: 50%;
}

.interno {
    background-color: brown;
    width: 50%;
    height: 50%;
}

.grid_f, .grid_r {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-row: 32px;
    margin-bottom: 16px;
}

.grid_f div, .grid_r div {
    height: 48px;
    background-color: aquamarine;
}

.grid_f {
    gap: 16px;
}

.grid_r {
    gap: 4%;
}

/* p {
    margin-block-start: 0;
    margin-block-end: 0;
} */

.texto_e {
    font-size: 16px;
    /* margin: 0.5em; */
}

.texto_i {
    font-size: 1rem;
    /* margin: 0.5em; */
}



/* 
    Body é relativa ao tamanho dos elementos filhos

    % = porcentagem (tamanho relativo)
    vh = view height  vw = view widht (Baseado no meta initial scale) (tamanho relativo)
    px = (pixel) usado bastante em margin e padding (evitar usar tamanhos relativos como %, vh, vw) (tamanho fixo)
    fr = fração (até o momento so utilizado em display grid)
    em =  (Unidade de texto com tamanho relativo ao font-size do seu próprio elemento) ex: font-size: 18px; margin: 1em; [nesse caso 1 em = 18px]
    rem = (tamanho relativo) (relativo ao elemento root, ou seja, o html,body) (Se o body especificou que a tag p = 16px, todo elemento dentro da body que for um p vai ter o 1rem = 16px pois o rem é relativo ao root) ***( IDEAL FAZER TEXTO E FONTES COM REM)

    *** Não é ideal usar tamanhos relativos em margin e padding





*/